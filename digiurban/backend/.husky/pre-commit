#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# ============================================================================
# FASE 3.4 - PRE-COMMIT HOOKS
# Valida√ß√µes autom√°ticas antes de cada commit
# ============================================================================

echo "üîç Executando valida√ß√µes pr√©-commit..."

# 1. Verificar se h√° arquivos TypeScript sendo commitados
if git diff --cached --name-only | grep -q '\.ts$'; then
  echo "üìã Arquivos TypeScript detectados, executando verifica√ß√µes..."

  # 2. Executar lint-staged (linting e formata√ß√£o)
  echo "üé® Executando lint-staged..."
  npx lint-staged

  # 3. Verificar compila√ß√£o TypeScript
  echo "üîß Verificando compila√ß√£o TypeScript..."
  npm run type-check

  if [ $? -ne 0 ]; then
    echo "‚ùå Falha na verifica√ß√£o TypeScript. Commit rejeitado."
    echo "üí° Execute 'npm run fix' para corrigir automaticamente problemas de formata√ß√£o/linting."
    exit 1
  fi

  echo "‚úÖ Todas as verifica√ß√µes TypeScript passaram!"
fi

# 4. Verificar se n√£o h√° suppressions TypeScript desnecess√°rias
echo "üö´ Verificando supress√µes TypeScript..."
suppressed_files=$(git diff --cached --name-only | xargs grep -l "@ts-ignore\|@ts-expect-error\|@ts-nocheck" 2>/dev/null || true)

if [ -n "$suppressed_files" ]; then
  echo "‚ö†Ô∏è  ATEN√á√ÉO: Arquivos com supress√µes TypeScript detectados:"
  echo "$suppressed_files"
  echo ""
  echo "‚ùó Na Fase 3, supress√µes devem ser evitadas. Considere:"
  echo "   1. Corrigir o problema de tipos diretamente"
  echo "   2. Adicionar interfaces apropriadas"
  echo "   3. Usar type guards"
  echo ""
  echo "Se realmente necess√°rio, adicione coment√°rio explicativo."
  echo ""
  read -p "Deseja continuar mesmo assim? (y/N): " -n 1 -r
  echo ""
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Commit cancelado."
    exit 1
  fi
fi

echo "üéâ Pr√©-commit validations conclu√≠das com sucesso!"