#!/bin/bash

# Script para verificar e aplicar migra√ß√µes do Prisma no servidor de produ√ß√£o

echo "========================================="
echo "üîç DIAGN√ìSTICO DE MIGRA√á√ïES - DigiUrban"
echo "========================================="
echo ""

# 1. Verificar migra√ß√µes locais
echo "üìÅ Migra√ß√µes dispon√≠veis (local):"
ls -1 prisma/migrations/ | grep -v migration_lock.toml
echo ""

# 2. Status das migra√ß√µes no banco
echo "üîç Verificando status das migra√ß√µes no banco..."
npx prisma migrate status
echo ""

# 3. Mostrar √∫ltima migra√ß√£o aplicada
echo "üìä √öltima migra√ß√£o aplicada:"
npx prisma migrate status | grep "applied" | tail -1
echo ""

# 4. Verificar se h√° migra√ß√µes pendentes
PENDING=$(npx prisma migrate status 2>&1 | grep -c "not yet been applied")

if [ $PENDING -gt 0 ]; then
    echo "‚ö†Ô∏è  ATEN√á√ÉO: H√° migra√ß√µes pendentes!"
    echo ""
    echo "Para aplicar as migra√ß√µes pendentes, execute:"
    echo "  npx prisma migrate deploy"
    echo ""
else
    echo "‚úÖ Todas as migra√ß√µes est√£o aplicadas!"
    echo ""
fi

# 5. Verificar schema do Citizen
echo "üîç Verificando constraint do CPF no banco..."
echo "SELECT sql FROM sqlite_master WHERE type='index' AND name='citizens_cpf_key';" | sqlite3 prisma/dev.db

if [ $? -eq 0 ]; then
    echo "‚ùå Constraint @unique do CPF AINDA EXISTE no banco!"
    echo "   Migra√ß√£o 20251024140335_fix_citizen_cpf_unique_constraint N√ÉO foi aplicada"
else
    echo "‚úÖ Constraint @unique do CPF foi removida corretamente"
fi
