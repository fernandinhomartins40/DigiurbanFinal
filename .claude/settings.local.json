{
  "permissions": {
    "allow": [
      "Bash(Select-Object FullName)",
      "Bash(awk:*)",
      "Bash(for model in \"StudentAttendance\" \"StudentEnrollment\" \"SchoolTransport\" \"SocialAssistanceAttendance\" \"CulturalAttendance\" \"SportsAttendance\")",
      "Bash(do echo \"=== $model ===\")",
      "Bash(done)",
      "Bash(npx tsc:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(xargs:*)",
      "Bash(for model in \"EducationAttendance\" \"Student\" \"DisciplinaryRecord\" \"SchoolDocument\" \"StudentTransfer\" \"AttendanceRecord\" \"GradeRecord\" \"SchoolManagement\" \"SchoolMeal\")",
      "Bash(do echo \"========== $model ==========\")",
      "Bash(taskkill:*)",
      "Bash(for model in \"VulnerableFamily\" \"BenefitRequest\" \"EmergencyDelivery\" \"SocialGroupEnrollment\" \"HomeVisit\" \"SocialProgramEnrollment\" \"SocialAppointment\" \"SocialEquipment\")",
      "Bash(for model in \"RuralTraining\" \"TechnicalAssistance\" \"AgricultureAttendance\" \"CulturalWorkshopEnrollment\" \"ArtisticGroup\" \"CulturalProject\" \"CulturalProjectSubmission\" \"CulturalEvent\" \"CulturalManifestation\")",
      "Bash(for model in \"Athlete\" \"SportsInfrastructureReservation\" \"CompetitionEnrollment\" \"SportsTeam\" \"TournamentEnrollment\" \"SportsModality\" \"Competition\")",
      "Bash(for model in \"HousingAttendance\" \"HousingApplication\" \"LandRegularization\" \"RentAssistance\" \"HousingUnit\" \"HousingRegistration\")",
      "Bash(for model in \"EnvironmentalAttendance\" \"EnvironmentalLicense\" \"EnvironmentalComplaint\" \"EnvironmentalProgram\" \"TreeCuttingAuthorization\" \"EnvironmentalInspection\" \"ProtectedArea\")",
      "Bash(for model in \"PublicWorksAttendance\" \"UrbanPlanningAttendance\" \"SecurityAttendance\" \"PublicServiceAttendance\" \"TourismAttendance\")",
      "Bash(find:*)",
      "Bash(npm run dev:*)",
      "Bash(sqlite3:*)",
      "Bash(dir)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(npx prisma migrate reset:*)",
      "Bash(set PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=sim!)",
      "Bash($env:PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"sim!\")",
      "Bash(npx prisma db push:*)",
      "Bash(npx prisma db seed:*)",
      "Bash(dir:*)",
      "Bash(npx prisma generate:*)",
      "Bash(timeout:*)",
      "Bash(npx prisma:*)",
      "Bash(npm run build:*)",
      "Bash(copy entity-handlers.ts entity-handlers.ts.backup)",
      "Bash(npx tsx:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)"
    ],
    "deny": [],
    "ask": []
  }
}
