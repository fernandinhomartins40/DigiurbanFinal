const fs = require('fs');

console.log('üìã Scripts Dispon√≠veis para Coleta de CNPJs\n');
console.log('='.repeat(80));

const scripts = [
  {
    nome: 'coletar-cnpjs-capitais.js',
    descricao: 'Coleta CNPJs das 27 capitais brasileiras',
    recomendado: '‚≠ê COMECE POR AQUI!',
    tempo: '5-10 minutos',
    municipios: '27 capitais',
    comando: 'node coletar-cnpjs-capitais.js'
  },
  {
    nome: 'coletar-cnpjs-interativo.js',
    descricao: 'Coleta CNPJs de todos os munic√≠pios interativamente',
    recomendado: '‚úÖ Recomendado',
    tempo: '4-5 horas (ou v√°rias sess√µes)',
    municipios: '5.570 munic√≠pios',
    comando: 'node coletar-cnpjs-interativo.js'
  },
  {
    nome: 'integrar-cnpjs-coletados.js',
    descricao: 'Integra CNPJs coletados no arquivo principal',
    recomendado: '‚úÖ Execute ap√≥s coletar',
    tempo: '< 1 segundo',
    municipios: 'N/A',
    comando: 'node integrar-cnpjs-coletados.js'
  },
  {
    nome: 'validar-cnpjs.js',
    descricao: 'Valida todos os CNPJs e mostra estat√≠sticas',
    recomendado: '‚úÖ Execute periodicamente',
    tempo: '< 5 segundos',
    municipios: 'N/A',
    comando: 'node validar-cnpjs.js'
  },
  {
    nome: 'limpar-cnpjs-invalidos.js',
    descricao: 'Remove CNPJs inv√°lidos do banco de dados',
    recomendado: '‚ö†Ô∏è Execute se valida√ß√£o detectar erros',
    tempo: '< 1 segundo',
    municipios: 'N/A',
    comando: 'node limpar-cnpjs-invalidos.js'
  },
  {
    nome: 'buscar-cnpj-receita.js',
    descricao: 'Helper para busca manual na Receita Federal',
    recomendado: 'üí° Use quando Google n√£o encontrar',
    tempo: 'Vari√°vel',
    municipios: 'N/A',
    comando: 'node buscar-cnpj-receita.js'
  },
  {
    nome: 'buscar-cnpjs-automatico.js',
    descricao: 'Busca autom√°tica via API (experimental)',
    recomendado: '‚ö†Ô∏è Experimental',
    tempo: '8-10 horas',
    municipios: 'Munic√≠pios >50k hab.',
    comando: 'node buscar-cnpjs-automatico.js'
  }
];

scripts.forEach((script, i) => {
  console.log(`\n${i + 1}. ${script.nome}`);
  console.log(`   üìù ${script.descricao}`);
  console.log(`   üè∑Ô∏è  ${script.recomendado}`);
  console.log(`   ‚è±Ô∏è  Tempo: ${script.tempo}`);
  if (script.municipios !== 'N/A') {
    console.log(`   üèôÔ∏è  Munic√≠pios: ${script.municipios}`);
  }
  console.log(`   üíª Comando: ${script.comando}`);
});

console.log('\n' + '='.repeat(80));
console.log('\nüöÄ FLUXO RECOMENDADO:\n');

console.log('1Ô∏è‚É£  IN√çCIO R√ÅPIDO (10 minutos):');
console.log('   node coletar-cnpjs-capitais.js');
console.log('   node integrar-cnpjs-coletados.js');
console.log('   node validar-cnpjs.js\n');

console.log('2Ô∏è‚É£  COLETA COMPLETA (v√°rias sess√µes):');
console.log('   node coletar-cnpjs-interativo.js');
console.log('   node integrar-cnpjs-coletados.js');
console.log('   node validar-cnpjs.js\n');

console.log('='.repeat(80));

// Verificar status atual
if (fs.existsSync('./municipios-brasil.json')) {
  const municipios = JSON.parse(fs.readFileSync('./municipios-brasil.json', 'utf8'));
  const comCNPJ = municipios.filter(m => m.cnpj).length;
  const total = municipios.length;
  const percentual = ((comCNPJ / total) * 100).toFixed(2);

  console.log('\nüìä STATUS ATUAL:\n');
  console.log(`   Total de munic√≠pios: ${total}`);
  console.log(`   Com CNPJ: ${comCNPJ} (${percentual}%)`);
  console.log(`   Sem CNPJ: ${total - comCNPJ} (${(100 - parseFloat(percentual)).toFixed(2)}%)`);

  const barra = '‚ñà'.repeat(Math.floor(parseFloat(percentual)));
  console.log(`\n   Progresso: [${barra.padEnd(100)}] ${percentual}%\n`);
}

// Verificar CNPJs coletados pendentes
if (fs.existsSync('./cnpj-coletados.json')) {
  const cnpjsColetados = JSON.parse(fs.readFileSync('./cnpj-coletados.json', 'utf8'));
  const total = Object.keys(cnpjsColetados).length;

  console.log(`üíæ CNPJs COLETADOS (pendentes de integra√ß√£o): ${total}\n`);
  console.log('   Execute: node integrar-cnpjs-coletados.js\n');
}

console.log('='.repeat(80));
console.log('\nüìñ Para mais informa√ß√µes, leia: README-CNPJ.md\n');
